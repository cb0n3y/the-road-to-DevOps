name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  checkout-repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install yamllint
        run: pip install yamllint
      - name: Validate YAML files
        run: |
          find . -name '*.yml' -o -name '*.yaml' | xargs -I {} yamllint -c .yamllint {}

  lint-trailing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for trailing whitespace
        run: |
          if grep -rI --include '*.groovy' --include '*.yml' '[[:space:]]$' ./; then
            echo "Trailing whitespace found!"
            exit 1
          else
            echo "No trailing whitespace."
          fi

  lint-groovy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install npm-groovy-lint
        run: npm install -g npm-groovy-lint

      - name: Lint Groovy files
        run: |
          set +e
          npm-groovy-lint
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Groovy lint finished with infos/warnings. Ignoring for CI success."
          fi

  validate-vagrantfiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install Vagrant
        run: |
          sudo apt-get update -y
          sudo apt-get install -y vagrant

      - name: Validate Vagrantfile(s)
        run: |
          set -euo pipefail
          vfiles=$(find . -type f -name 'Vagrantfile')

          if [ -z "$vfiles" ]; then
            echo "No Vagrantfile found â€” skipping validation."
            exit 0
          fi

          echo "Found Vagrantfile(s):"
          echo "$vfiles"
          echo

          failures=0
          for f in $vfiles; do
            echo "==> Checking Ruby syntax for $f"
            if ruby -c "$f"; then
              echo "OK: $f"
            else
              echo "ERROR: Ruby syntax issue in $f"
              failures=$((failures + 1))
            fi
          done

          if [ "$failures" -ne 0 ]; then
            echo "Vagrantfile validation failed for $failures file(s)."
            exit 1
          fi

          echo "All Vagrantfile(s) passed Ruby syntax check."

  validate-terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8  # or your preferred version

      - name: Validate Terraform files
        run: |
          set -e
          echo "Running terraform fmt check..."
          terraform fmt -check -recursive
          echo "Running terraform validate..."
          terraform init -backend=false
          terraform validate
